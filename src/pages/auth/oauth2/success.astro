---
import Layout from "../../../layouts/Layout.astro";

const userId = Astro.url.searchParams.get("userId");
const secret = Astro.url.searchParams.get("secret");
---

<Layout
  title="Authorization Successful - SparkPall"
  description="Your SparkPall account has been successfully authorized"
>
  <div class="auth-container oauth-success-container">
    <img src="/images/app-icon.svg" alt="SparkPall Logo" class="app-icon" />
    <h1>Authorization Successful</h1>
    <p id="statusMessage" class="message success">
      Your SparkPall account has been successfully authorized. We're creating
      your session...
    </p>
    <div id="appOpenContainer" class="hidden">
      <button id="openAppBtn" class="btn primary">
        <img src="/images/app-icon.svg" alt="" class="btn-icon" />
        Open SparkPall App
      </button>
    </div>
    <div id="appStoreLinks" class="hidden">
      <p>Don't have the app installed? Download it now:</p>
      <div class="app-store-buttons">
        <a
          href="https://apps.apple.com/us/app/sparkpall/id1610931185"
          target="_blank"
          rel="noopener noreferrer"
        >
          <img
            src="/images/app-store-badge.svg"
            alt="Download on the App Store"
            class="app-store-badge"
          />
        </a>
        <a
          href="https://play.google.com/store/apps/details?id=xyz.sparkpall.app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <img
            src="/images/google-play-badge.png"
            alt="Get it on Google Play"
            class="google-play-badge"
          />
        </a>
      </div>
    </div>
  </div>
</Layout>

<script define:vars={{ userId, secret }}>
  const appSchemes = ["app.sparkpall.xyz://", "sparkpall.xyz://"];
  const appStoreUrl = "https://apps.apple.com/us/app/sparkpall/id1610931185";
  const playStoreUrl =
    "https://play.google.com/store/apps/details?id=xyz.sparkpall.app";

  async function createSession() {
    try {
      const response = await fetch("/v1/account/sessions/token", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ userId, secret }),
      });

      if (!response.ok) {
        throw new Error("Failed to create session");
      }

      const sessionData = await response.json();

      // Session created successfully
      document.getElementById("statusMessage").textContent =
        "Session created successfully. You can now use the app.";
      document.getElementById("appOpenContainer").classList.remove("hidden");
    } catch (error) {
      console.error("Error creating session:", error);
      document.getElementById("statusMessage").textContent =
        "An error occurred while creating your session. Please try again.";
      document.getElementById("statusMessage").classList.remove("success");
      document.getElementById("statusMessage").classList.add("error");
    }
  }

  function openApp() {
    const deepLink = `oauth-success?userId=${userId}&secret=${secret}`;

    // Try opening the app with each URL scheme
    for (const scheme of appSchemes) {
      window.location.href = scheme + deepLink;
    }

    // If the app doesn't open, show the app store links after a delay
    setTimeout(() => {
      if (!document.hidden) {
        document.getElementById("appStoreLinks").classList.remove("hidden");
      }
    }, 1000);
  }

  document.getElementById("openAppBtn").addEventListener("click", openApp);

  // Create session when the page loads
  if (userId && secret) {
    createSession();
  } else {
    document.getElementById("statusMessage").textContent =
      "Error: Missing user ID or secret. Please try the authorization process again.";
    document.getElementById("statusMessage").classList.remove("success");
    document.getElementById("statusMessage").classList.add("error");
  }
</script>

<style>
  .auth-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    padding: 2rem;
    text-align: center;
  }

  .app-icon {
    width: 80px;
    height: 80px;
    margin-bottom: 1rem;
  }

  .message {
    padding: 1rem;
    border-radius: 5px;
    margin-bottom: 1rem;
  }

  .success {
    color: #155724;
    background-color: #d4edda;
  }

  .error {
    color: #721c24;
    background-color: #f8d7da;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 5px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .btn-icon {
    width: 24px;
    height: 24px;
    margin-right: 0.5rem;
  }

  .primary {
    background-color: #007aff;
    color: white;
  }

  .primary:hover {
    background-color: #0056b3;
  }

  .app-store-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 1rem;
  }

  .app-store-badge,
  .google-play-badge {
    height: 40px;
  }

  .hidden {
    display: none;
  }
</style>
