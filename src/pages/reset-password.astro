---
import Layout from "../layouts/Layout.astro";

const userId = Astro.url.searchParams.get("userId");
const secret = Astro.url.searchParams.get("secret");
const expire = Astro.url.searchParams.get("expire");

const appScheme = "sparkpall://";
const appId = "xyz.sparkpall.app";
const appStoreUrl = `https://apps.apple.com/us/app/sparkpall/id1610931185`;
const playStoreUrl = `https://play.google.com/store/apps/details?id=${appId}`;
---

<Layout
  title="Reset Password - SparkPall"
  description="Reset your SparkPall password"
>
  <div class="reset-password-container">
    <h1>Reset Your Password</h1>
    <div id="resetForm">
      <p>Enter your new password below:</p>
      <form id="passwordResetForm">
        <input type="hidden" name="userId" value={userId} />
        <input type="hidden" name="secret" value={secret} />
        <input
          type="password"
          name="password"
          required
          placeholder="New password"
        />
        <button type="submit">Reset Password</button>
      </form>
    </div>
    <div id="resetSuccess" style="display: none;">
      <p>
        Your password has been successfully reset. You can now log in with your
        new password.
      </p>
    </div>
    <div id="resetError" style="display: none;">
      <p>
        An error occurred while resetting your password. Please try again or
        contact support.
      </p>
    </div>
    <p>Or, open the SparkPall app to reset your password:</p>
    <button id="openAppBtn">Open SparkPall App</button>
  </div>

  <script
    define:vars={{
      appScheme,
      userId,
      secret,
      expire,
      appStoreUrl,
      playStoreUrl,
    }}
  >
    function openApp() {
      const deepLink = `${appScheme}reset-password?userId=${userId}&secret=${secret}&expire=${expire}`;
      const fallbackUrl = /iPhone|iPad|iPod/i.test(navigator.userAgent)
        ? appStoreUrl
        : playStoreUrl;

      window.location.href = deepLink;

      setTimeout(() => {
        if (document.hidden) return;
        window.location.href = fallbackUrl;
      }, 2000);
    }

    document.getElementById("openAppBtn").addEventListener("click", openApp);

    document
      .getElementById("passwordResetForm")
      .addEventListener("submit", async (e) => {
        e.preventDefault();
        const form = e.target;
        const formData = new FormData(form);
        const password = formData.get("password");

        try {
          const response = await fetch("/.netlify/functions/reset-password", {
            method: "POST",
            body: JSON.stringify({
              userId: form.userId.value,
              secret: form.secret.value,
              password: password,
            }),
            headers: {
              "Content-Type": "application/json",
            },
          });

          if (response.ok) {
            document.getElementById("resetForm").style.display = "none";
            document.getElementById("resetSuccess").style.display = "block";
          } else {
            throw new Error("Password reset failed");
          }
        } catch (error) {
          console.error("Error:", error);
          document.getElementById("resetForm").style.display = "none";
          document.getElementById("resetError").style.display = "block";
        }
      });

    // Try to open the app immediately when the page loads
    openApp();
  </script>

  <style>
    .reset-password-container {
      max-width: 400px;
      margin: 0 auto;
      padding: 2rem;
      text-align: center;
    }

    button {
      background-color: #4caf50;
      border: none;
      color: white;
      padding: 15px 32px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
    }

    input[type="password"] {
      width: 100%;
      padding: 12px 20px;
      margin: 8px 0;
      box-sizing: border-box;
    }
  </style>
</Layout>
